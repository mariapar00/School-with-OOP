Άσκηση Java - Αντικειμενοστραφής Προγραμματισμός

Όνομα: Μαρία Παρασκευοπούλου

Α.Μ.: sdi1800155


Οι κλάσεις που χρησιμοποιώ είναι: Space, Schoolyard, Stairs, Corridor, SchoolBuilding, Classroom, Person, Teacher, Student, Junior, Senior.

Κληρονομικότητα:
Η Space είναι abstract base class με παράγωγες τις Schoolyard, Stairs, Corridor, SchoolBuilding, Classroom. Οι pure virtual συναρτήσεις της enter και exit υλοποιούνται από όλες τις παράγωγες.
Η συνάρτηση operate υλοποιείται μόνο από τα SchoolBuilding, Schoolyard, Classroom (από εκφώνηση: "Το σχολικό κτήριο λειτουργεί (operate) κάποιες ώρες, λειτουργώντας τους ορόφους
του τις ώρες αυτές. Ενας όροφος λειτουργεί (operate) κάποιες ώρες, λειτουργώντας τις αίθουσές του τις ώρες αυτές.").
Η Person είναι abstract base class με παράγωγες τις Teacher, Student. 
Η Student είναι abstract base class με παράγωγες τις Junior και Senior. 

main.cpp:
Δίνονται τιμές από γραμμη εντολών στις μεταβλητές Cclass, Lj, Ls, Lt, N.
Δημιουργειταί το σχολείο που αποτελεί σύνθεση των υπόλοιπων χώρων. 
Διαβάζεται το αρχείο people.txt και οι μαθητές μπαίνουν ένας ένας στους χώρους(enter) και οι δάσκαλοι τοποθετούνται στις αίθουσες(place).
Στο αρχείο people.txt δίνονται οι μαθητές με τη μορφή:
		junior <όνομα μαθητή> <επίθετο μαθητή> 
ή
		senior <όνομα μαθητή> <επίθετο μαθητή>
και οι δάσκαλοι:
		teacher <όνομα δασκάλου> <επίθετο δασκάλου>
Στο αρχείο υπάρχουν 360 μαθητές και 18 δάσκαλοι, ακριβώς σύμφωνα με τις προδιαγραφές του σχολείου (18 αίθουσες) και με το Cclass που δίνεται απο τη γραμμή εντολών, 20. Από τους 360, οι 180 είναι
juniors και οι 180 seniors (οι αίθουσες σε καθέ όροφο είναι 6: 1-3 των juniors, 4-6 των seniors).

Ο τρόπος που κατανέμω τους μαθητές και τους δασκάλους στις αίθουσες είναι τυχαίος (rand()) και πραγματοποιείται στις συναρτήσεις arrange_student και arrange_teacher αντίστοιχα. 
Με το people.txt οι τάξεις γεμίζουν πλήρως οπότε δεν έχει τοσό νόημα το πως θα μπουν αλλά με το people-less.txt που δίνω επίσης στον φάκελο "main" αυτό έχει μεγαλύτερη σημασία. Το people-less.txt 
περιέχει 15 juniors, 16 seniors, 9 teachers.
Επίσης έχω βάλει συνθήκες ώστε αν διαβαστεί .txt με περισσότερους μάθητες ή δασκάλους από όσο χωράει το σχόλειο να μην τους δέχεται και να εκτυπώνει αντίστοιχα μηνύματα. Δοκιμάστε το people-more.txt
(186 juniors, 184 seniors, 20 teachers).

operate και attend:
Η SchoolBuilding::operate καλεί την Corridor::operate για κάθε όροφο, η οποία καλεί την Classroom::operate για κάθε αίθουσα του ορόφου.
Η Classroom::operate κάλει την attend για κάθε μαθητή της αιθουσάς (η καθέ αίθουσα έχει αποθηκευμένους τους μαθητές της σε ένα vector. Ανάλογα με το τι είναι καθέ μαθητής καλείται είτε η Junior::attend 
είτε η Senior::attend) και την Teacher::teach για τον δάσκαλο της.

Οι print, enter, place γίνονται ακριβώς όπως αναφέρεται από την εκφώνηση της 3ης άσκησης και η empty και teachers_out όπως στην εκφώνηση αυτής.

Το argv[6] είναι το αρχείο προς διάβασμα, μπορείτε να επιλέξετε οποιοδήποτε από τα τρία αρχεία, people.txt, people-less.txt ή people-more.txt, που δίνω ή καποιό άλλο αν οι γραμμές του είναι της μορφής 
που περιγράφεται παραπάνω.

Για compile και run:
javac school/*.java
java school/Main 20 3 2 1 7 people.txt (με τα όρισματα προφανώς που επιθυμείτε)



Ευχαριστώ πολύ!




